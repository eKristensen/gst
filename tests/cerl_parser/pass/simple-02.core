module 'simple-02' ['foo'/2,
		    'module_info'/0,
		    'module_info'/1]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[116|[101|[115|[116|[115|[47|[99|[101|[114|[108|[95|[112|[97|[114|[115|[101|[114|[47|[112|[97|[115|[115|[47|[115|[105|[109|[112|[108|[101|[45|[48|[50|[46|[101|[114|[108]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],1}],
		%% Line 4
		'session' =
		    %% Line 4
		    [39|[102|[111|[111|[39|[40|[95|[44|[95|[41|[59|[40|[95|[44|[95|[41]]]]]]]]]]]]]]]],
		%% Line 5
		'spec' =
		    %% Line 5
		    [{{'foo',2},[{'type',{5,10},'fun',[{'type',{5,10},'product',[{'type',{5,11},'boolean',[]}|[{'type',{5,22},'integer',[]}]]}|[{'type',{5,37},'boolean',[]}]]}|[{'type',{6,10},'fun',[{'type',{6,10},'product',[{'type',{6,11},'pid',[]}|[{'type',{6,18},'list',[]}]]}|[{'type',{6,29},'reference',[]}]]}]]}]]
'foo'/2 =
    %% Line 7
    ( fun (_0,_1) ->
	  ( case <_0,_1> of
	      <A,B>
		  when call 'erlang':'is_boolean'
			(A) ->
		  call 'erlang':'=='
		      (B, A)
	      %% Line 8
	      <A,B> when 'true' ->
		  do  call 'erlang':'!'
			  (A, B)
		      ( letrec
			    'recv$^0'/0 =
				fun () ->
				    let <_6,_4> =
					primop 'recv_peek_message'
					    ()
				    in  case _6 of
					  <'true'> when 'true' ->
					      do  primop 'remove_message'
						      ()
						  _4
					  ( <'false'> when 'true' ->
						let <_5> =
						    primop 'recv_wait_timeout'
							('infinity')
						in  case _5 of
						      <'true'> when 'true' ->
							  'true'
						      ( <'false'> when 'true' ->
							    ( apply 'recv$^0'/0
								  ()
							      -| ['dialyzer_ignore'] )
							-| ['dialyzer_ignore'] )
						    end
					    -| ['dialyzer_ignore'] )
					end
			in  ( apply 'recv$^0'/0
				  ()
			      -| ['dialyzer_ignore'] )
			-| ['letrec_goto','no_inline'] )
	    end
	    -| [{'function',{'foo',2}}] )
      -| [{'function',{'foo',2}}] )
'module_info'/0 =
    ( fun () ->
	  call 'erlang':'get_module_info'
	      ('simple-02')
      -| [{'function',{'module_info',0}}] )
'module_info'/1 =
    ( fun (_0) ->
	  call 'erlang':'get_module_info'
	      ('simple-02', ( _0
			      -| [{'function',{'module_info',1}}] ))
      -| [{'function',{'module_info',1}}] )
end