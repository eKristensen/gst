module 'st_compute_server' ['handle_new_session_call'/3,
			    'handle_plus_call'/4,
			    'handle_plus_cast'/3,
			    'module_info'/0,
			    'module_info'/1,
			    'start_link'/0]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[115|[116|[95|[99|[111|[109|[112|[117|[116|[101|[95|[115|[101|[114|[118|[101|[114|[46|[101|[114|[108]]]]]]]]]]]]]]]]]]]]],1}],
		%% Line 2
		'behavior' =
		    %% Line 2
		    ['gen_server_plus'],
		%% Line 6
		'mspec' =
		    %% Line 6
		    [38|[123|[10|[32|[32|[32|[32|[32|[32|[32|[32|[110|[101|[103|[40|[91|[39|[115|[101|[108|[95|[110|[101|[103|[39|[93|[46|[32|[63|[105|[110|[116|[101|[103|[101|[114|[46|[32|[33|[105|[110|[116|[101|[103|[101|[114|[46|[32|[101|[110|[100|[46|[41|[44|[10|[32|[32|[32|[32|[32|[32|[32|[32|[97|[100|[100|[40|[91|[39|[115|[101|[108|[95|[97|[100|[100|[39|[93|[46|[32|[63|[105|[110|[116|[101|[103|[101|[114|[46|[32|[91|[39|[97|[100|[100|[95|[49|[39|[93|[46|[32|[63|[105|[110|[116|[101|[103|[101|[114|[46|[32|[33|[105|[110|[116|[101|[103|[101|[114|[46|[32|[101|[110|[100|[46|[41|[10|[32|[32|[32|[32|[32|[32|[32|[125|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],
		%% Line 29
		'spec' =
		    %% Line 29
		    [{{'handle_new_session_call',3},[{'type',{29,30},'fun',[{'type',{29,30},'product',[{'atom',{29,31},'neg'}|[{'type',{29,38},'pid',[]}|[{'type',{29,45},'map','any'}]]]}|[{'type',{29,55},'tuple',[{'atom',{29,56},'reply'}|[{'atom',{29,65},'received'}|[{'type',{29,77},'tuple',[{'atom',{29,78},'sel_neg'}|[{'type',{29,89},'tuple',[]}]]}|[{'type',{29,94},'map','any'}]]]]}]]}|[{'type',{30,30},'fun',[{'type',{30,30},'product',[{'atom',{30,31},'add'}|[{'type',{30,38},'pid',[]}|[{'type',{30,45},'map','any'}]]]}|[{'type',{30,55},'tuple',[{'atom',{30,56},'reply'}|[{'atom',{30,65},'received'}|[{'type',{30,77},'tuple',[{'atom',{30,78},'sel_add'}|[{'type',{30,89},'tuple',[]}]]}|[{'type',{30,94},'map','any'}]]]]}]]}]]}],
		%% Line 37
		'spec' =
		    %% Line 37
		    [{{'handle_plus_call',4},[{'type',{37,23},'fun',[{'type',{37,23},'product',[{'type',{37,24},'integer',[]}|[{'type',{37,35},'pid',[]}|[{'type',{37,42},'tuple',[{'atom',{37,43},'sel_neg'}|[{'type',{37,54},'tuple',[]}]]}|[{'type',{37,64},'map','any'}]]]]}|[{'type',{37,74},'tuple',[{'atom',{37,75},'reply'}|[{'type',{37,84},'integer',[]}|[{'atom',{37,96},'session_end'}|[{'type',{37,118},'map','any'}]]]]}]]}|[{'type',{38,23},'fun',[{'type',{38,23},'product',[{'type',{38,24},'integer',[]}|[{'type',{38,35},'pid',[]}|[{'type',{38,42},'tuple',[{'atom',{38,43},'sel_add'}|[{'type',{38,54},'tuple',[]}]]}|[{'type',{38,64},'map','any'}]]]]}|[{'type',{38,74},'tuple',[{'atom',{38,75},'reply'}|[{'atom',{38,84},'received'}|[{'type',{38,96},'tuple',[{'atom',{38,97},'add_1'}|[{'type',{38,106},'integer',[]}]]}|[{'type',{38,118},'map','any'}]]]]}]]}|[{'type',{39,23},'fun',[{'type',{39,23},'product',[{'type',{39,24},'integer',[]}|[{'type',{39,35},'pid',[]}|[{'type',{39,42},'tuple',[{'atom',{39,43},'add_1'}|[{'type',{39,52},'integer',[]}]]}|[{'type',{39,64},'map','any'}]]]]}|[{'type',{39,74},'tuple',[{'atom',{39,75},'reply'}|[{'type',{39,84},'integer',[]}|[{'atom',{39,96},'session_end'}|[{'type',{39,118},'map','any'}]]]]}]]}]]]}]]
'start_link'/0 =
    %% Line 22
    ( fun () ->
	  %% Line 23
	  call 'gen_server_plus':'start_link'
	      ('st_compute_server', [], [])
      -| [{'function',{'start_link',0}}] )
'handle_new_session_call'/3 =
    %% Line 31
    ( fun (_0,_1,_2) ->
	  ( case <_0,_1,_2> of
	      <'neg',_X_From,GlobalState> when 'true' ->
		  %% Line 32
		  {'reply','received',{'sel_neg',{}},GlobalState}
	      %% Line 34
	      <'add',_X_From,GlobalState> when 'true' ->
		  %% Line 35
		  {'reply','received',{'sel_add',{}},GlobalState}
	      ( <_5,_4,_3> when 'true' ->
		    ( primop 'match_fail'
			  (( {'function_clause',_5,_4,_3}
			     -| [{'function',{'handle_new_session_call',3}}] ))
		      -| [{'function',{'handle_new_session_call',3}}] )
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'handle_new_session_call',3}}] )
      -| [{'function',{'handle_new_session_call',3}}] )
'handle_plus_call'/4 =
    %% Line 40
    ( fun (_0,_1,_2,_3) ->
	  ( case <_0,_1,_2,_3> of
	      <V1,_X_From,{'sel_neg',{}},GlobalState> when 'true' ->
		  let <_4> =
		      call %% Line 41
			   'erlang':%% Line 41
				    '-'
			  (%% Line 41
			   V1)
		  in  %% Line 41
		      {'reply',_4,'session_end',GlobalState}
	      %% Line 43
	      <V1,_X_From,{'sel_add',{}},GlobalState> when 'true' ->
		  %% Line 44
		  {'reply','received',{'add_1',V1},GlobalState}
	      %% Line 46
	      <V2,_X_From,{'add_1',V1},GlobalState> when 'true' ->
		  let <_5> =
		      call %% Line 47
			   'erlang':%% Line 47
				    '+'
			  (%% Line 47
			   V1, %% Line 47
			       V2)
		  in  %% Line 47
		      {'reply',_5,'session_end',GlobalState}
	      %% Line 50
	      <_10,_11,SessionState,GlobalState> when 'true' ->
		  do  %% Line 51
		      call 'io':'format'
			  ([85|[110|[107|[110|[111|[119|[110|[32|[112|[108|[117|[115|[32|[99|[97|[108|[108|[32|[105|[103|[110|[111|[114|[101|[100|[46|[32|[73|[102|[32|[111|[110|[108|[121|[32|[115|[117|[112|[112|[111|[114|[116|[101|[100|[32|[99|[97|[108|[108|[115|[32|[97|[114|[101|[32|[109|[97|[100|[101|[32|[116|[104|[105|[115|[32|[109|[101|[115|[115|[97|[103|[101|[32|[115|[104|[111|[117|[108|[100|[32|[110|[101|[118|[101|[114|[32|[97|[112|[112|[101|[97|[114|[46|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		      %% Line 52
		      {'noreply',SessionState,GlobalState}
	    end
	    -| [{'function',{'handle_plus_call',4}}] )
      -| [{'function',{'handle_plus_call',4}}] )
'handle_plus_cast'/3 =
    %% Line 54
    ( fun (_0,_1,_2) ->
	  do  %% Line 55
	      call 'io':'format'
		  ([78|[111|[32|[99|[97|[115|[116|[32|[115|[117|[112|[112|[111|[114|[116|[126|[110]]]]]]]]]]]]]]]]])
	      %% Line 56
	      {'noreply',_1,_2}
      -| [{'function',{'handle_plus_cast',3}}] )
'module_info'/0 =
    ( fun () ->
	  call 'erlang':'get_module_info'
	      ('st_compute_server')
      -| [{'function',{'module_info',0}}] )
'module_info'/1 =
    ( fun (_0) ->
	  call 'erlang':'get_module_info'
	      ('st_compute_server', ( _0
				      -| [{'function',{'module_info',1}}] ))
      -| [{'function',{'module_info',1}}] )
end