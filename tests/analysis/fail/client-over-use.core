module 'client-over-use' ['module_info'/0,
			  'module_info'/1,
			  'negation'/2]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[116|[101|[115|[116|[115|[47|[97|[110|[97|[108|[121|[115|[105|[115|[47|[102|[97|[105|[108|[47|[99|[108|[105|[101|[110|[116|[45|[111|[118|[101|[114|[45|[117|[115|[101|[46|[101|[114|[108]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],1}],
		%% Line 9
		'type' =
		    %% Line 9
		    [{'server',{'type',{9,19},'tuple',[]},[]}],
		%% Line 10
		'type' =
		    %% Line 10
		    [{'session',{'type',{10,20},'tuple',[]},[]}],
		%% Line 15
		'session' =
		    %% Line 15
		    [39|[110|[101|[103|[97|[116|[105|[111|[110|[39|[40|[115|[101|[114|[118|[101|[114|[40|[43|[123|[110|[101|[103|[40|[33|[110|[117|[109|[98|[101|[114|[46|[32|[63|[110|[117|[109|[98|[101|[114|[46|[32|[101|[110|[100|[46|[41|[44|[32|[97|[100|[100|[40|[33|[110|[117|[109|[98|[101|[114|[46|[32|[33|[110|[117|[109|[98|[101|[114|[46|[32|[63|[110|[117|[109|[98|[101|[114|[46|[32|[101|[110|[100|[46|[41|[125|[46|[41|[44|[95|[41|[32|[45|[62|[32|[95|[44|[32|[91|[32|[83|[101|[115|[115|[105|[111|[110|[73|[68|[58|[32|[32|[101|[110|[100|[46|[32|[93|[32|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],
		%% Line 17
		'spec' =
		    %% Line 17
		    [{{'negation',2},[{'type',{17,15},'fun',[{'type',{17,15},'product',[{'user_type',{17,16},'server',[]}|[{'type',{17,25},'number',[]}]]}|[{'type',{17,38},'number',[]}]]}]}]]
'negation'/2 =
    %% Line 18
    ( fun (_0,_1) ->
	  do  %% Line 19
	      call 'io':'format'
		  ([68|[69|[66|[85|[71|[58|[32|[83|[116|[97|[114|[116|[101|[100|[32|[110|[101|[103|[126|[110]]]]]]]]]]]]]]]]]]]])
	      let <SessionID> =
		  call %% Line 21
		       'gen_server_plus':%% Line 21
					 'call'
		      (_0, %% Line 21
			   'new')
	      in  do  %% Line 22
		      call 'io':'format'
			  ([68|[69|[66|[85|[71|[58|[32|[67|[108|[105|[101|[110|[116|[32|[115|[116|[97|[114|[116|[101|[100|[32|[115|[101|[115|[115|[105|[111|[110|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		      do  %% Line 23
			  ( call ( 'gen_server_plus'
				   -| ['result_not_wanted'] ):( 'call'
								-| ['result_not_wanted'] )
				(_0, SessionID, ( 'neg'
						  -| ['result_not_wanted'] ))
			    -| ['result_not_wanted'] )
			  do  %% Line 24
			      call 'io':'format'
				  ([68|[69|[66|[85|[71|[58|[32|[67|[108|[105|[101|[110|[116|[32|[99|[104|[111|[115|[101|[32|[110|[101|[103|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]])
			      let <Res> =
				  call %% Line 31
				       'gen_server_plus':%% Line 31
							 'call'
				      (_0, %% Line 31
					   SessionID, _1)
			      in  %% Line 33
				  case call 'gen_server_plus':'call'
					   (_0, SessionID, 'fish') of
				    <_8>
					when call 'erlang':'=:='
					      (_8,
					       Res) ->
					do  %% Line 34
					    call 'io':'format'
						([67|[108|[105|[101|[110|[116|[32|[115|[101|[110|[116|[32|[110|[117|[109|[98|[101|[114|[32|[97|[110|[100|[32|[103|[111|[116|[32|[114|[101|[115|[112|[111|[110|[115|[101|[58|[32|[126|[119|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Res|[]])
					    %% Line 35
					    Res
				    ( <_5> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_5})
				      -| ['compiler_generated'] )
				  end
      -| [{'function',{'negation',2}}] )
'module_info'/0 =
    ( fun () ->
	  call 'erlang':'get_module_info'
	      ('client-over-use')
      -| [{'function',{'module_info',0}}] )
'module_info'/1 =
    ( fun (_0) ->
	  call 'erlang':'get_module_info'
	      ('client-over-use', ( _0
				    -| [{'function',{'module_info',1}}] ))
      -| [{'function',{'module_info',1}}] )
end